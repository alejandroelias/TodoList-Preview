{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleToggle","handleDelete","className","onClick","desc","TodoList","todos","TodoAdd","handleAddTodo","initialState","useState","values","setValues","handleInputChange","target","name","value","useForm","description","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.164f4c4e.chunk.js","sourcesContent":["\r\nexport const todoReducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload]\r\n        \r\n        case 'delete':\r\n            return state.filter(todo=>todo.id!==action.payload);\r\n\r\n        case 'toggle':\r\n            return state.map(todo=>\r\n                (todo.id === action.payload)\r\n                    ?{...todo, done:!todo.done}\r\n                    :todo\r\n            )\r\n\r\n        case 'toggle-old':\r\n            return state.map(todo=>{\r\n                if(todo.id === action.payload){\r\n                    return{\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                }else{\r\n                    return todo;\r\n                }\r\n            })\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const TodoListItem = ({ todo, index, handleToggle, handleDelete }) => {\r\n    return (\r\n        <li\r\n            key={todo.id}\r\n            className=\"list-group-item\"\r\n        >\r\n            <p\r\n                className={`${todo.done && 'complete'}`}\r\n                onClick={() => handleToggle(todo.id)}\r\n            >\r\n                {index + 1}.{todo.desc}\r\n            </p>\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => handleDelete(todo.id)}\r\n            >\r\n                Borrar\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({ todos, handleToggle, handleDelete }) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                todos.map((todo, index) => (\r\n\r\n                    <TodoListItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        index={index}\r\n                        handleToggle={handleToggle}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({handleAddTodo}) => {\r\n\r\n    const [{ description }, handleInputChange, reset] = useForm({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (description.trim().length <= 1) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        }\r\n\r\n\r\n        handleAddTodo(newTodo);\r\n        reset();\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar TODO</h4>\r\n            <hr />\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Aprender...\"\r\n                    autoComplete=\"off\"\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                >\r\n                    Agregar\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    // console.log(initialState)\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n    \r\n\r\n    const handleInputChange = ({target}) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        }); \r\n    }\r\n    return [values, handleInputChange, reset]\r\n    \r\n}\r\n\r\n\r\n//Este es un customHook que se encarga de manejar los formularios","import React, { useReducer, useEffect } from 'react';\r\nimport { todoReducer } from './todoReducer';\r\nimport './style.css';\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\n\r\nconst init = () => {\r\n\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n}\r\n\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n\r\n    const handleAddTodo = (newTodo) => {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n    }\r\n\r\n    const handleDelete = (todoId) => {\r\n\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n\r\n        dispatch(action);\r\n\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>TodoApp ({todos.length})</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <TodoList\r\n                        todos={todos}\r\n                        handleToggle={handleToggle}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-5\">\r\n                    <TodoAdd\r\n                        handleAddTodo={handleAddTodo}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n// import { Padre } from './components/07-tarea-memo/Padre';\n// import { MemoHook } from './components/06-memos/MemoHook';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { Layout } from './components/05-useLayoutEffect/Layout';\n// import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n// import { FocusScreen } from './components/04-useRef/FocusScreen';\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n// import { FormWithCustomHook } from './components/02-useEffect/FormWithCustomHook';\n// import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n// import { CounterApp } from './components/01-useState/CounterApp';\n// import {HookApp} from './HookApp'\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}